GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
transform_volumes <- function(x){
# Transform nested list into a data frame
df <- data.frame(
from = sapply(function(x) x$node$from),
to = sapply(function(x) x$node$to),
volume = sapply(function(x) x$node$total$volumeNumbers$volume)
)
return(df)
}
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
### 4: test
GQL(
vol_qry(
id=stations_metadata_df$id[1],
from=to_iso8601(stations_metadata_df$latestData[1],-4),
to=to_iso8601(stations_metadata_df$latestData[1],0)
),
.url = configs$vegvesen_url
)
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
transform_volumes <- function(x){
# Extract the edges from the input
edges <- x$trafficData$volume$byHour$edges
# Use sapply to traverse through the list
from <- sapply(edges, function(edge) edge$node$from)
to <- sapply(edges, function(edge) edge$node$to)
volume <- sapply(edges, function(edge) edge$node$total$volumeNumbers$volume)
# Convert the extracted data to a data frame
df <- data.frame(from = as.POSIXct(from, format="%Y-%m-%dT%H:%M:%S", tz="UTC"),
to = as.POSIXct(to, format="%Y-%m-%dT%H:%M:%S", tz="UTC"),
volume = volume)
# Check if there's only one data point
if(nrow(df) <= 1) {
stop("Data frame must have more than one row for geom_line() to work.")
}
return(df)
}
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
View(test_stations_metadata_colnames)
transform_volumes <- function(data){
# Extract relevant portion of the list
edges <- data$trafficData$volume$byHour$edges
# Transform nested list into a data frame
df <- data.frame(
from = sapply(edges, function(item) item$node$from),
to = sapply(edges, function(item) item$node$to),
volume = sapply(edges, function(item) item$node$total$volumeNumbers$volume)
)
return(df)
}
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
transform_volumes <- function(x) {
edges <- x$trafficData$volume$byHour$edges
df <- data.frame(
from = as.POSIXct(sapply(edges, `[[`, "node", "from"), format="%Y-%m-%dT%H:%M:%S", tz="UTC"),
to = as.POSIXct(sapply(edges, `[[`, "node", "to"), format="%Y-%m-%dT%H:%M:%S", tz="UTC"),
volume = sapply(edges, function(edge) edge$node$total$volumeNumbers$volume)
)
return(df)
}
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
View(to_iso8601)
transform_volumes <- function(x){
# Extract the edges from the input
edges <- x$trafficData$volume$byHour$edges
# Use sapply to traverse through the list
from <- sapply(edges, function(edge) edge$node$from)
to <- sapply(edges, function(edge) edge$node$to)
volume <- sapply(edges, function(edge) edge$node$total$volumeNumbers$volume)
# Convert the extracted data to a data frame
df <- data.frame(from = as.POSIXct(from, format="%Y-%m-%dT%H:%M:%S", tz="UTC"),
to = as.POSIXct(to, format="%Y-%m-%dT%H:%M:%S", tz="UTC"),
volume = volume)
return(df)
}
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
{station_name <<- .$name[1]; .} %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
{station_name <<- .$name[1]; .} %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
{station_name <<- .$name[1]; .} %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
{station_name <<- .$name[1]; .} %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
{station_name <<- .$name[1]; .} %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
{station_name <<- .$name[1]; .} %>%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
source("gql-queries/vol_qry.r")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %$%
{station_name <<- .$name[1]; .} %>%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(., .url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %>%
{station_name <<- .$name[1]; .} %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(.url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %>%
{station_name <<- .$name[1]; .} %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(.url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %>%
{station_name <<- .$name[1]; .} %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(.url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %>%
{station_name <<- .$name[1]; .} %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(.url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %>%
{station_name <<- .$name[1]; .} %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(.url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
stations_metadata_df %>%
filter(latestData > Sys.Date() - days(7)) %>%
sample_n(1) %>%
{station_name <<- .$name[1]; .} %$%
vol_qry(
id = id,
from = to_iso8601(latestData, -4),
to = to_iso8601(latestData, 0)
) %>%
GQL(.url = configs$vegvesen_url) %>%
transform_volumes() %>%
ggplot(aes(x=from, y=volume)) +
geom_line() +
theme_classic() +
labs(title = "Traffic Volume over Time",
subtitle = paste("Traffic Station:", station_name),
x = "Time",
y = "Volume")
